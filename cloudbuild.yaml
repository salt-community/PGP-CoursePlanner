steps:
  # Build and push backend image
  - name: 'gcr.io/cloud-builders/docker'
    # build       Build an image from a Dockerfile
    # we don't need to specify docker here
    args: ['build', '-t', 'gcr.io/pgp-sandbox/backend:${_TAG}', '.']
    dir: Backend

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/pgp-sandbox/backend:${_TAG}']
    dir: Backend

  # Build and push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    # same thing here, we don't need to specify docker build 
    args: ['build', '-t', 'gcr.io/pgp-sandbox/frontend:${_TAG}', '.']
    dir: Frontend

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/pgp-sandbox/frontend:${_TAG}']
    dir: Frontend

  # Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'backend', '--image', 'gcr.io/pgp-sandbox/backend:${_TAG}', '--platform', 'managed', '--region', 'us-central1', '--allow-unauthenticated']

  # Deploy frontend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'frontend', '--image', 'gcr.io/pgp-sandbox/frontend:${_TAG}', '--platform', 'managed', '--region', 'us-central1', '--allow-unauthenticated']

images:
  - 'gcr.io/pgp-sandbox/backend:${_TAG}'
  - 'gcr.io/pgp-sandbox/frontend:${_TAG}'

substitutions:
  _TAG: $SHORT_SHA


#to build, deploy and run this file run the following command
# gcloud builds submit --config cloudbuild.yaml --substitutions=_TAG=$(git rev-parse --short HEAD)

#"git rev-parse --short HEAD"  will give you the short commit hash of the current commit
#ensuring that the image tags are unique for each build 